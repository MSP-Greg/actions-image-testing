name: Image Info

on: [push, pull_request, workflow_dispatch]

jobs:
  Windows:
    name: >-
      ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: working_directory
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, windows-2019 ]

    steps:
      - name: repo checkout
        uses: actions/checkout@v3

      - name: show ENV
        run:  gci env:* | sort-object name | Out-String -Stream -Width 120

      - name: show Path
        run:  |
          # Show Path with Powershell
          $f, $r = $env:Path.split([IO.Path]::PathSeparator); $r

      - name: disk info
        run:  |
          Get-CimInstance Win32_LogicalDisk
          echo ''
          Get-Disk

      - name: dir C:/
        run:  dir C:/

      - name: dir C:/hostedtoolcache/windows
        run:  dir C:/hostedtoolcache/windows

      - name: dir C:/hostedtoolcache/windows/Ruby
        run:  dir C:/hostedtoolcache/windows/Ruby

      - name: dir C:/Program Files
        run:  dir 'C:/Program Files'

      - name: dir C:/tools
        run:  dir C:/tools

      - name: dir C:/Users
        run:  dir C:/Users

      - name: dir C:/msys64/home
        run:  dir C:/msys64/home

      - name: dir C:/SeleniumWebDrivers
        run:  dir C:/SeleniumWebDrivers

      - name: tcp port info
        run: netsh interface ipv4 show excludedportrange protocol=tcp

      - name: where & version info
        run:  ./where.ps1

      - name: Ruby info
        run:  |
          # Ruby Info ps1
          ruby -v
          ruby -W0 -e 'puts %Q(TOPDIR   #{RbConfig::TOPDIR})'
          ruby -W0 -e 'puts %Q(bindir   #{RbConfig::CONFIG[%q(bindir)]})'
          echo ''
          ruby -W0 -e 'puts %Q(Gem.path), Gem.path'
          echo ''
          echo '##[group]Socket Constants'
          ruby -rsocket -e 'puts Socket.constants.sort'
          echo ::[endgroup]

      - name: Ruby info bash
        shell: bash
        run:  |
          # Ruby Info
          ruby -v
          ruby -W0 -e 'puts %Q(TOPDIR   #{RbConfig::TOPDIR})'
          ruby -W0 -e 'puts %Q(bindir   #{RbConfig::CONFIG[%q(bindir)]})'
          echo ''
          ruby -W0 -e 'puts %Q(Gem.path), Gem.path'

      - name: MSYS2 gcc 64 bit
        run:  |
          $env:Path = "C:/msys64/mingw64/bin;C:/msys64/usr/bin;$env:Path"
          gcc -v --version

      - name: MSYS2 gcc 32 bit
        run:  |
          $env:Path = "C:/msys64/mingw32/bin;C:/msys64/usr/bin;$env:Path"
          gcc -v --version

      - name: MSYS2 packages
        run:  ruby pacman_query.rb

  Ubuntu-macOS:
    name: >-
      ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, ubuntu-22.04, ubuntu-20.04, macos-14, macos-13, macos-12, macos-11 ]

    steps:
      - name: repo checkout
        uses: actions/checkout@v3

      - name: disk info
        run:  df -h

      - name:  show ENV
        shell: pwsh
        run:   gci env:* | sort-object name | Out-String -Stream -Width 120

      - name:  show PATH
        shell: pwsh
        run:   |
          # Show PATH with Powershell
          $f, $r = $env:PATH.split([IO.Path]::PathSeparator); $r

      - name:  apt list --installed
        if:    startsWith(matrix.os, 'ubuntu')
        run:   apt list --installed

      - name:  Open fd limit
        run:   |
          echo Open fd limit $(ulimit -n)
          echo Soft limit $(ulimit -Sn)
          echo Hard limit $(ulimit -Hn)

      - name: Disk Info
        if:   startsWith(matrix.os, 'ubuntu')
        run:  blkid

      - name: misc version info
        run:  |
          openssl version
          curl --version
          gcc --version
          echo "node $(node --version)"
          rustc --version
          cargo --version

      - name: which ruby, openssl
        run:  |
          for p in `which -a ruby`; do printf "%-25s  %s\n" $p "$($p --version)"; done
          for p in `which -a openssl`; do printf "%-25s  %s\n" $p "$($p version)"; done

      - name: Ruby toolcache versions (preinstalled)
        run: find $AGENT_TOOLSDIRECTORY/Ruby -maxdepth 1 -type d | grep -e [0-9]$ | sort

      - name:  Ruby info
        run:  |
          # Ruby Info
          ruby -v
          ruby -W0 -e 'puts %Q(TOPDIR   #{RbConfig::TOPDIR})'
          ruby -W0 -e 'puts %Q(bindir   #{RbConfig::CONFIG[%q(bindir)]})'
          echo ''
          ruby -W0 -e 'puts %Q(Gem.path), Gem.path'
          echo ''
          echo 'which ruby:'
          which -a ruby
          echo ''
          echo 'which rake:'
          which -a rake
          echo ''
          echo '##[group]Socket Constants'
          ruby -rsocket -e 'puts Socket.constants.sort'
          echo ::[endgroup]
